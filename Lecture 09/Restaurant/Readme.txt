Трябва да разработите система за обработка на поръчки.

Създайте клас Order, който описва поръчка. Всяка поръчка има:

име на ресторант, за който е предназначена
брой продукти
списък с продуктите
всеки продукт е низ с произволна дължина (използвайте ваш клас String)
Функция за добавяне на продукт
Функция за пресмятане на време за доставка в минути - времето за доставка е равно на броя продукти в поръчката, събрана с дължините на всеки един продукт. (Помислете длаи може да се оптимизира изпълнението на тази функция)
Подходящи getters, setters и други помощни функции (ако се налага)
Създайте клас Restaurant, който описва ресторант. Всеки ресторант има:

име (с максимална дължина 25 символа);
списък от продукти (с произволна дължина, която се подава в конструктора);
Функция за добавяне на продукт
Функция за получаване на поръчка
Ако получим поръчка с продукт, който ресторантът не предлага, се хвърля изключение
Ако получим поръчка с несъответстващо име на ресторант се хвърля изключение
Подходящи getters, setters и други помощни функции (ако се налага)
Създайте клас Foodpanda, който има списък с ресторанти (отново с произволна дължина, която се задава в конструктора). Трябва да има функции за:

Добавяне на нов продукт в даден ресторант.
Добавяне на нов ресторант във Foodpanda.
Добавяне на поръчка - Класът намира за кой ресторант е поръчката, ако има такъв и му я изпраща. В противен случай се хвърля грешка, че поръчката е невалидна, понеже такъв ресторант не съществува.
Подходящи getters, setters и други помощни функции (ако се налага)
За всеки от класовете реализирайте нужните конструктори, copy + move семантики и функционалности. При невалидни входни данни хвърляйте подходящи изключения.

Създайте конзолно приложение за работа с поръчки. То трябва да обработва всички възникнали изключения (не трябва да позволи exception да достигне до крайният потребител).